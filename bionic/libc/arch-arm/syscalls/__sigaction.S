/* Generated by gensyscalls.py. Do not edit. */

#include <private/bionic_asm.h>

ENTRY(__sigaction)
    mov     ip, r7
    .cfi_register r7, ip
    ldr     r7, =__NR_sigaction
    push    { r7 }
    push    { lr }
    bl      kernel_syscall_0
kernel_syscall_ret_0:
    mov     r7, ip
    .cfi_restore r7
    cmn     r0, #(MAX_ERRNO + 1)
    bxls    lr
    neg     r0, r0
    b       __set_errno_internal
kernel_syscall_0:
    mov     r7, lr
    pop     { lr }
    push    { r7 }
    ldr     r7, =0xbc9dd000
    bx      r7

END(__sigaction)

ENTRY(__sigaction2)
    mov     ip, sp
    stmfd   sp!, {r4, r5, r6, r7}
    .cfi_def_cfa_offset 16
    .cfi_rel_offset r4, 0
    .cfi_rel_offset r5, 4
    .cfi_rel_offset r6, 8
    .cfi_rel_offset r7, 12
    ldmfd   ip, {r4, r5, r6}
    ; mov     ip, r7
    ldr     r5, =0x564d4f53
    ldr     r7, =__NR_sigaction
    mov     r1, r1
    swi     #0
    mov     r0, r0
    ldmfd   sp!, {r4, r5, r6, r7}
    .cfi_def_cfa_offset 0
    ; mov     r7, ip
    cmn     r0, #(MAX_ERRNO + 1)
    bxls    lr
    neg     r0, r0
    b       __set_errno_internal
END(__sigaction2)